		//xmpp.HandlerFunc(
		//	func(tokenReadEncoder xmlstream.TokenReadEncoder, start *xml.StartElement) error {
		//		decoder := xml.NewTokenDecoder(xmlstream.MultiReader(xmlstream.Token(*start), tokenReadEncoder))
		//		if _, err := decoder.Token(); err != nil {
		//			return err
		//		}
		//
		//		body := XmppMessageBody{}
		//		err := decoder.DecodeElement(&body, start)
		//		if err != nil && err != io.EOF {
		//			fmt.Println("Error decoding element - " + err.Error())
		//			return nil
		//		}
		//
		//		self.listeners.Lock.Lock()
		//
		//		indexesToRemove := make([]int, 0)
		//		//emit to every listener
		//		for i := len(self.listeners.Array) - 1; i >= 0; i-- {
		//			listener := self.listeners.Array[i]
		//
		//			//check the conditionals
		//			if listener.StanzaType != "" && listener.StanzaType != start.Name.Local {
		//				continue
		//			}
		//			if listener.MessageType != "" && listener.MessageType != body.Type {
		//				continue
		//			}
		//			if listener.BareJID != "" && listener.BareJID != body.From.Bare().String() {
		//				continue
		//			}
		//			if listener.Resourcepart != "" && listener.Resourcepart != body.From.Resourcepart() {
		//				continue
		//			}
		//			if listener.LeftToRecieve == 0 {
		//				indexesToRemove = append(indexesToRemove, i)
		//				close(listener.EventChan)
		//			} else if listener.LeftToRecieve > 0 {
		//				listener.LeftToRecieve--
		//			}
		//
		//			//emit event
		//			listener.EventChan <- XmppAbstractMessage{
		//				Stanza: body,
		//			}
		//
		//			//latest consumers first, can swallow
		//			if listener.SwallowEvent {
		//				break
		//			}
		//
		//		}
		//		self.listeners.Lock.Unlock()
		//		return nil
		//	},